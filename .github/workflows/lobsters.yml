name: Lobsters Data Import

on:
  push:
    paths:
      - .github/workflows/lobsters.yml
  workflow_dispatch:
  schedule:
    - cron: '*/60 * * * *'

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Fetch newest
        uses: githubocto/flat@v2
        with:
          http_url: https://lobste.rs/newest.json
          downloaded_filename: newest.json
      - name: Neo4j import
        uses: johnymontana/flat-graph@v1.2
        with:
          neo4j-user: ${{secrets.NEO4J_USER}}
          neo4j-password: ${{secrets.NEO4J_password}}
          neo4j-uri: ${{secrets.NEO4J_URI}}
          filename: newest.json
          cypher-query: >
            unwind $value as article
            merge (s:User {username: article.submitter_user.username})
              set s.created = DateTime(article.submitter_user.created_at),
                  s.karma   = article.submitter_user.karma,
                  s.about   = article.submitter_user.about,
                  s.avatar  = "https://lobste.rs" + article.submitter_user.avatar_url
            merge (i:User {username: article.submitter_user.invited_by_user})
            merge (i)<-[:INVITED_BY]-(s)
            merge (a:Article {short_id: article.short_id})
            set a.url      = article.url,
                a.score    = article.score,
                a.title    = article.title,
                a.comments = article.comments_url,
                a.created  = DateTime(article.created_at)
            merge (s)-[:SUBMITTED]->(a)
            with article, a
            unwind article.tags as tag
            merge (t:Tag {name: tag})
            merge (a)-[:HAS_TAG]->(t)
